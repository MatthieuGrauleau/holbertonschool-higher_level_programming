doctest for 2-matrix_divided.py
============================
This function that divides all elements of a matrix.

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test for success
================

>>> matrix_divided([[1,2,3], [1,2,3]], 2)
[[0.5, 1.0, 1.5], [0.5, 1.0, 1.5]]

>>> matrix_divided([[1,2,3], [1,2,3]], -2)
[[-0.5, -1.0, -1.5], [-0.5, -1.0, -1.5]]

>>> matrix_divided([[1,2,3]], 2)
[[0.5, 1.0, 1.5]]

=================
Test for fail
=================

>>> matrix_divided([[1,2,3], [1,2,3]])
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided([[1,2,3], [1,2,3]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided([[1,2,], [1,2,3]], 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1,2,"baguette"], [1,2,3]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1,2,3], [1,2,3]], "fromage")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix_divided([None], 4)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1,2,3]], 2,5)
Traceback (most recent call last):
TypeError: matrix_divided() takes 2 positional arguments but 3 were given
